<UserControl x:Class="RconInvolved.Views.PlayerListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:metro="http://schemas.codeplex.com/elysium"
             xmlns:params="http://schemas.codeplex.com/elysium/params"
             xmlns:extra="http://schemas.extra.com/ui"
             >
    <ScrollViewer>
        <StackPanel>

            <extra:AnimatedWrapPanel>
                <!-- Display -->
                <metro:DropDownCommandButton Margin="{Binding Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter='Left, Right', RelativeSource={RelativeSource Self}, Path=(params:General.BoldPaddingValue), Mode=OneWay}"
                                             Style="{StaticResource DisplayDropDownCommandButtonStyle}">
                    <metro:DropDownCommandButton.Submenu>
                        <metro:Submenu>
                            <MenuItem Style="{StaticResource DecimalPlacesMenuItemStyle}">
                                <MenuItem Header="{Binding Mode=TwoWay, Path=DecimalPlaces}"
                                          Style="{StaticResource DecimalPlacesSliderMenuItemStyle}"/>
                            </MenuItem>
                            <MenuItem Style="{StaticResource ZoomMenuItemStyle}">
                                <MenuItem Header="{Binding Mode=TwoWay, Path=Zoom}"
                                          Style="{StaticResource ZoomSliderMenuItemStyle}"/>
                            </MenuItem>
                        </metro:Submenu>
                    </metro:DropDownCommandButton.Submenu>
                </metro:DropDownCommandButton>
                <!-- Export -->
                <metro:DropDownCommandButton Margin="{Binding Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter='Left, Right', RelativeSource={RelativeSource Self}, Path=(params:General.BoldPaddingValue), Mode=OneWay}"
                                             Style="{StaticResource ExportDropDownCommandButtonStyle}">
                    <metro:DropDownCommandButton.Submenu>
                        <metro:Submenu>
                            <MenuItem Style="{StaticResource ExportMenuItemStyle}"/>
                            <MenuItem Style="{StaticResource ExportCsvMenuItemStyle}"/>
                            <MenuItem Style="{StaticResource PdfMenuItemStyle}"/>
                            <MenuItem Style="{StaticResource ExcelMenuItemStyle}"/>
                            <MenuItem Style="{StaticResource WordMenuItemStyle}"/>
                            <MenuItem Style="{StaticResource OutlookMenuItemStyle}"/>
                            <MenuItem Style="{StaticResource PowerPointMenuItemStyle}"/>
                        </metro:Submenu>
                    </metro:DropDownCommandButton.Submenu>
                </metro:DropDownCommandButton>
                <Grid Height="60" Width="263">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="51*"/>
                    </Grid.ColumnDefinitions>
                    <extra:ButtonTextBox x:Name="SearchButtonTextBoxStyle"
                    	Command="{Binding ShowMessageBoxCommand}"
                    	CommandParameter="Has The Command Property"
                    	Style="{StaticResource SearchButtonTextBoxStyle}" Grid.Column="1"/>
                </Grid>
            </extra:AnimatedWrapPanel>
            <DataGrid x:Name="DataGrid"
                      extra:UIElementAttached.IsBubblingMouseWheelEvents="True"
                      ItemsSource="{Binding FundsView}" 
                      IsReadOnly="True"
                      Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">
                <extra:DataGridAttached.GroupSummary>
                    <extra:DataGridGroupSummaryCollection>
                        <extra:DataGridGroupSummary Column="{Binding Path=Columns[7], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                            <extra:DataGridGroupSummary.Template>
                                <DataTemplate>
                                    <TextBlock Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type GroupItem}}}"
                                                       Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
                                                       Text="{Binding Path=Items.Count, StringFormat='Nombre {0}'}"
                                                       TextAlignment="Right"
                                                       VerticalAlignment="Center"/>
                                </DataTemplate>
                            </extra:DataGridGroupSummary.Template>
                        </extra:DataGridGroupSummary>
                    </extra:DataGridGroupSummaryCollection>
                </extra:DataGridAttached.GroupSummary>
                <DataGrid.Columns>
                    <extra:DataGridTemplateColumn extra:DataGridColumnAttached.CanUserHideColumn="True"  
                                                          AutomationProperties.Name="Template"  
                                                          Header="Détails" 
                                                          Width="50">
                        <extra:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <extra:Icon Validation.ErrorTemplate="{StaticResource SmallWarningValidationErrorControlTemplate}" 
                                                    Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" 
                                                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
                                                    Style="{StaticResource Refresh1IconStyle}"
                                                    ToolTip="{Binding Icon}"
                                                    VerticalAlignment="Center"/>
                            </DataTemplate>
                        </extra:DataGridTemplateColumn.CellTemplate>
                        <extra:DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Style="{StaticResource DataGridTextColumnEditingElementStyle}"
                                                 Text="{Binding Icon}"/>
                            </DataTemplate>
                        </extra:DataGridTemplateColumn.CellEditingTemplate>
                    </extra:DataGridTemplateColumn>
                    <extra:DataGridIntegerColumn extra:DataGridColumnAttached.CanUserHideColumn="True"
                                                      AutomationProperties.Name="Integer"  
                                                      Binding="{Binding ID, UpdateSourceTrigger=PropertyChanged}" 
                                                      Header="ID"
                                                      Width="40"/>
                    <extra:DataGridTextColumn extra:DataGridColumnAttached.CanUserHideColumn="True"
                                                      AutomationProperties.Name="Text"  
                                                      Binding="{Binding IP}" 
                                                      Header="IP"
                                                      Width="140"/>
                    <extra:DataGridIntegerColumn extra:DataGridColumnAttached.CanUserHideColumn="True"
                                                      AutomationProperties.Name="Integer"  
                                                      Binding="{Binding Ping, UpdateSourceTrigger=PropertyChanged}" 
                                                      Header="Ping"
                                                      Width="40"/>
                    <extra:DataGridTextColumn         AutomationProperties.Name="Text"  
                                                      Binding="{Binding Guid}" 
                                                      Header="GUID"
                                                      Width="140"/>
                    <extra:DataGridTextColumn         AutomationProperties.Name="Text"  
                                                      Binding="{Binding Status}" 
                                                      Header="Status"
                                                      Width="80"/>
                    <extra:DataGridCheckBoxColumn     AutomationProperties.Name="CheckBox" 
                                                      Binding="{Binding IsWatched}"
                                                      Header="A surveiller"
                                                      Width="100"/>
                    <extra:DataGridTextColumn         AutomationProperties.Name="Text"  
                                                      Binding="{Binding ToolsLink}" 
                                                      Header="Lien Tool"
                                                      Width="140"/>
                </DataGrid.Columns>
                <DataGrid.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}">
                        <Setter Property="extra:DataGridRowAttached.IsDeselectionEnabled" Value="True"/>
                    </Style>
                </DataGrid.ItemContainerStyle>
                <DataGrid.LayoutTransform>
                    <ScaleTransform CenterX="0.5" 
                                            CenterY="0.5" 
                                            ScaleX="{Binding Zoom}" 
                                            ScaleY="{Binding Zoom}"/>
                </DataGrid.LayoutTransform>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Content="Name"
                                           Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                            <TextBlock Grid.Column="1" 
                                               Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
                                               Style="{StaticResource NormalTextStyle}"
                                               Text="{Binding Name}"
                                               VerticalAlignment="Center"/>

                            <Label Grid.Row="1" 
                                           Content="Etc."
                                           Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                            <TextBlock Grid.Column="1" 
                                               Grid.Row="1" 
                                               Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
                                               Style="{StaticResource NormalTextStyle}"
                                               Text="Etc."
                                               VerticalAlignment="Center"/>

                        </Grid>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
            </DataGrid>
        </StackPanel>
    </ScrollViewer>
</UserControl>
